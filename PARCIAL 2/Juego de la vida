using System;
using System.Collections.Generic;
namespace juego
{

    enum Estado {viva, muerta} // enum solo puede tomar los valores establecidos
    class Celula
    {
        public Estado estado_actual, estado_siguiente;
        public short renglon, columna;
        public Tablero tablero;
        public Celula (Estado inicial, Tablero tablero, short renglon, short columna)
        {
            estado_actual=inicial;
            this.tablero=tablero;
            this.renglon=renglon;
            this.columna=columna;
        }
        public void actualiza_estado()
        {
        }
        private short num_vecinas()
        {
            short cuenta=0;
            //1 
            if (renglon>0 && columna>0)
            {
                if(tablero.grid[renglon-1][columna-1. estado_actual==Estado.viva])
                cuenta++;
            }
        }
        public void print()
        {
            if (this.estado_actual==Estado.viva)
            {
            Console.Write("▒");
            }
            else
            {
                Console.Write("▓");
            }  
        }
    }
    class Tablero
    {
        public List <List<Celula>> grid;
        
        public Tablero(short num_renglones, short num_columnas)
            {
                for (short i=0; i<=9; i++)
                {
                    grid=new List<List<Celula>>();
                    for (short j=0;j<=19; j++)
                    {
                        grid[i].Add(new Celula (Estado.viva, this, i,j));
                    }
                }
            }
        public void print()
        {
            Console.Write("X");
            foreach(List<Celula> renglon in grid)
            {
                
                foreach (Celula C in renglon)
                {
                    C.print();
                }
                    
            }
                
        }

    }
    class Program
    {
        static void Main(string[] args)
        {
            Tablero GoL=new Tablero(80,120);
            GoL.inserta(new Celula(Estado.viva, GoL, 3,3));
            GoL.print();
        }
    }
}
